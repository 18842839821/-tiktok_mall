syntax = "proto3";

package order;

option go_package = "/order";

service OrderService {
  rpc PlaceOrder(PlaceOrderReq) returns(PlaceOrderResp){}
  rpc ProcessOrder(ProcessOrderReq) returns (ProcessOrderResp) {}
  rpc ListOrder(ListOrderReq) returns (ListOrderResp) {}
  rpc MarkOrderPaid(MarkOrderPaidReq) returns (MarkOrderPaidResp) {}
}

message PlaceOrderReq{
  repeated CartItem items=1;
  uint32 user_id =2;
}

message PlaceOrderResp{
  string success=1;
}

message CartItem {
  uint32 product_id = 1;
  int32  quantity = 2;
}

message Address {
  string street_address = 1;
  string city = 2;
  string state = 3;
  string country = 4;
  int32 zip_code = 5;
}

message ProcessOrderReq {
  uint32 user_id = 1;
  string user_currency = 2;

  Address address = 3;
  string email = 4;
  repeated OrderItem order_items = 5;
}

message OrderItem {
  CartItem item = 1;
  float cost = 2;
}

message ProcessOrderResp {}

message ListOrderReq {
  uint32 user_id = 1;
}

message Order {
  repeated OrderItem order_items = 1;
  string order_id = 2;
  uint32 user_id = 3;
  string user_currency = 4;
  Address address = 5;
  string email = 6;
}

message ListOrderResp {
  repeated Order orders = 1;
}

message MarkOrderPaidReq {
  uint32 user_id = 1;
  string order_id = 2;
}

message MarkOrderPaidResp {}